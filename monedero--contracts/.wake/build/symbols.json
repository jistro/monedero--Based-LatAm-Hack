{"contracts": ["IERC20Errors", "IERC1155Errors", "Context", "IERC20Metadata", "IERC721Errors", "ERC20", "IERC20", "mUSDC"], "enums": [], "canonical_enums": [], "errors": ["ERC721InvalidSender", "ERC721InvalidReceiver", "ERC1155MissingApprovalForAll", "ERC20InvalidApprover", "ERC721InsufficientApproval", "ERC20InsufficientAllowance", "ERC721InvalidApprover", "ERC1155InsufficientBalance", "ERC721InvalidOwner", "ERC1155InvalidApprover", "ERC1155InvalidArrayLength", "Unauthorized", "ERC20InvalidReceiver", "ERC20InsufficientBalance", "ERC1155InvalidSender", "ERC721NonexistentToken", "ERC721InvalidOperator", "ERC20InvalidSender", "ERC1155InvalidOperator", "ERC721IncorrectOwner", "ERC1155InvalidReceiver", "NotEnoughBalance", "ERC20InvalidSpender"], "canonical_errors": ["IERC1155Errors.ERC1155MissingApprovalForAll", "IERC1155Errors.ERC1155InvalidSender", "mUSDC.NotEnoughBalance", "IERC1155Errors.ERC1155InvalidArrayLength", "IERC1155Errors.ERC1155InvalidReceiver", "IERC721Errors.ERC721InvalidOwner", "IERC1155Errors.ERC1155InvalidApprover", "IERC721Errors.ERC721IncorrectOwner", "IERC721Errors.ERC721InvalidSender", "IERC20Errors.ERC20InvalidApprover", "IERC721Errors.ERC721InsufficientApproval", "IERC1155Errors.ERC1155InsufficientBalance", "IERC1155Errors.ERC1155InvalidOperator", "IERC20Errors.ERC20InvalidSpender", "mUSDC.Unauthorized", "IERC721Errors.ERC721InvalidApprover", "IERC721Errors.ERC721InvalidReceiver", "IERC20Errors.ERC20InsufficientAllowance", "IERC721Errors.ERC721InvalidOperator", "IERC721Errors.ERC721NonexistentToken", "IERC20Errors.ERC20InvalidSender", "IERC20Errors.ERC20InvalidReceiver", "IERC20Errors.ERC20InsufficientBalance"], "events": ["Transfer", "Approval"], "canonical_events": ["IERC20.Transfer", "IERC20.Approval"], "functions": ["_mint", "_transfer", "_contextSuffixLength", "_hookUpdateYield", "_update", "getRoleProposedAdministrator", "getRoleProposedTimeToClaimStakingContract", "getAdministratorAddress", "getStakingContractAddress", "_hookTransferYieldUpdate", "getRoleProposedStakingContract", "name", "mint", "allowance", "claimNewAdministratorAddress", "totalSupply", "cancelNewStakingContractAddress", "claimNewStakingContractAddress", "proposeNewAdministratorAddress", "constructor", "cancelNewAdministratorAddress", "proposeNewStakingContractAddress", "getUserData", "_approve", "_msgData", "approve", "decimals", "burn", "transferFrom", "getRoleProposedTimeToClaimAdministrator", "transfer", "_burn", "symbol", "balanceOf", "_spendAllowance", "_msgSender"], "canonical_functions": ["mUSDC.getRoleProposedTimeToClaimStakingContract()", "ERC20.name()", "mUSDC.cancelNewStakingContractAddress()", "mUSDC._hookUpdateYield(address)", "mUSDC.mint(address,uint256,uint256)", "mUSDC.cancelNewAdministratorAddress()", "mUSDC.getStakingContractAddress()", "ERC20._approve(address,address,uint256,bool)", "Context._contextSuffixLength()", "mUSDC.claimNewAdministratorAddress()", "ERC20._transfer(address,address,uint256)", "IERC20.transfer(address,uint256)", "ERC20._mint(address,uint256)", "mUSDC.constructor(address,address)", "mUSDC._hookTransferYieldUpdate(address,address)", "ERC20.totalSupply()", "IERC20.allowance(address,address)", "IERC20Metadata.decimals()", "mUSDC.getRoleProposedTimeToClaimAdministrator()", "ERC20.symbol()", "ERC20._burn(address,uint256)", "ERC20._approve(address,address,uint256)", "mUSDC.getAdministratorAddress()", "ERC20.transferFrom(address,address,uint256)", "ERC20.balanceOf(address)", "ERC20.approve(address,uint256)", "mUSDC.proposeNewAdministratorAddress(address)", "mUSDC.decimals()", "ERC20.constructor(string,string)", "IERC20Metadata.name()", "IERC20.approve(address,uint256)", "Context._msgData()", "IERC20.balanceOf(address)", "mUSDC.transferFrom(address,address,uint256)", "IERC20.transferFrom(address,address,uint256)", "mUSDC.approve(address,uint256)", "ERC20.decimals()", "Context._msgSender()", "mUSDC.getRoleProposedStakingContract()", "ERC20._update(address,address,uint256)", "mUSDC.getUserData(address)", "IERC20.totalSupply()", "IERC20Metadata.symbol()", "mUSDC.getRoleProposedAdministrator()", "ERC20._spendAllowance(address,address,uint256)", "ERC20.allowance(address,address)", "mUSDC.transfer(address,uint256)", "mUSDC.proposeNewStakingContractAddress(address)", "mUSDC.burn(address,uint256,uint256)", "mUSDC.claimNewStakingContractAddress()", "ERC20.transfer(address,uint256)"], "modifiers": ["onlyAdministrator", "onlyStakingContract"], "canonical_modifiers": ["mUSDC.onlyAdministrator", "mUSDC.onlyStakingContract"], "structs": ["UserData", "RoleTypeData"], "canonical_structs": ["mUSDC.UserData", "mUSDC.RoleTypeData"], "user_defined_value_types": [], "canonical_user_defined_value_types": [], "variables": ["_name", "userData", "stakingContract", "_balances", "administrator", "_allowances", "_totalSupply", "_symbol"], "canonical_variables": ["ERC20._name", "mUSDC.administrator", "ERC20._allowances", "mUSDC.userData", "ERC20._totalSupply", "ERC20._symbol", "mUSDC.stakingContract", "ERC20._balances"]}